
#运行nginx的用户
#user  nobody;
#工作进程的数量，可以根据cpu的核心总数来设置
worker_processes  1;

#错误日志文件的位置及输出级别（info 和 notice）
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#存储进程号的文件
#pid        logs/nginx.pid;

#工作模式的配置
events {
    #每个进程最大处理的连接数
    worker_connections  1024;
}

#http的配置
http {
    #导入个文件，里面有nginx支持的媒体类型
    include       mime.types;
    #默认的类型
    default_type  application/octet-stream;
    #指定日志的格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #用户访问日志的文件位置
    #access_log  logs/access.log  main;
    #是否调用sendfile函数来输出文件
    sendfile        on;
    #tcp_nopush     on;
    
    #连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;
    #开启gzip压缩
    #gzip  on;

    #虚拟主机配置
    server {
        #监听的端口
        listen       80;
        #服务器域名
        server_name  localhost;
        #网页的默认编码
        #charset koi8-r;
        #访问虚拟主机的日志位置
        #access_log  logs/host.access.log  main;
        
        #根据目录的配置
        location / {
            #网站根目录的配置
            root   html;
            #默认首页
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        
        
        #错误的反馈页面
        error_page   500 502 503 504  /50x.html;
        #错误的页面配置
        location = /50x.html {
            root   html;
        }

}
